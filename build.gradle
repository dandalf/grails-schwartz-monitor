buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"

        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.11'
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.4.RELEASE"
    id "com.jfrog.bintray" version "1.5"
    id "com.jfrog.artifactory" version "3.1.1"
}

version "2.0-SNAPSHOT"
group "org.grails.plugins"

apply plugin:'maven-publish'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "spring-boot"
apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.grails.grails-gsp'
// Used for publishing to central repository, remove if not needed
apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

apply plugin: 'org.asciidoctor.convert'

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided "org.springframework.boot:spring-boot-starter-logging"
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    runtime "org.grails.plugins:asset-pipeline"

    testCompile "org.grails:grails-plugin-testing"

    console "org.grails:grails-console"

    provided "com.agileorbit:schwartz:1.0.0"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

bintray {
    pkg {
        userOrg = ''
        name = "org.grails.plugins:$project.name"
        issueTrackerUrl = "https://github.com/robertoschwald/$project.name/issues"
        vcsUrl = "https://github.com/robertoschwald/$project.name"
        version {
            attributes = ['grails-plugin': "robertoschwald.plugins:$project.name"]
            name = project.version
        }
    }
}

task docs(dependsOn: [asciidoctor, org.gradle.api.tasks.javadoc.Groovydoc]) << {
    File dir = new File(buildDir, 'docs')

    ['pdf', 'epub'].each { String ext ->
        File f = new File(dir, 'index.' + ext)
        if (f.exists()) {
            f.renameTo new File(dir, project.name + '-' + project.version + '.' + ext)
        }
    }

    new File(buildDir, 'docs/ghpages.html') << file('src/docs/index.tmpl').text.replaceAll('@VERSION@', project.version)

    copy {
        from 'src/docs'
        into new File(buildDir, 'docs').path
        include '**/*.jpg', '**/*.png'
    }
}

asciidoctor {
    separateOutputDirs = false
    sourceDir = file('src/docs')
    sources {
        include 'index.adoc'
    }
    outputDir new File(buildDir, 'docs')
    backends 'html5', 'pdf', 'epub3'
    attributes copyright: 'Apache License, Version 2.0',
            docinfo1: 'true',
            doctype: 'book',
            encoding: 'utf-8',
            'front-cover-image': 'image:cover.png[Front Cover,800,600]',
            icons: 'font',
            id: project.name + ':' + project.version,
            idprefix: '',
            idseparator: '-',
            lang: 'en',
            linkattrs: true,
            numbered: '',
            producer: 'Asciidoctor',
            revnumber: project.version,
            setanchors: true,
            'source-highlighter': 'prettify',
            toc: 'left',
            toc2: '',
            toclevels: '2'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom.withXml {
                def pomNode = asNode()
                pomNode.dependencyManagement.replaceNode {}

                // simply remove dependencies without a version
                // version-less dependencies are handled with dependencyManagement
                // see https://github.com/spring-gradle-plugins/dependency-management-plugin/issues/8 for more complete solutions
                pomNode.dependencies.dependency.findAll {
                    it.version.text().isEmpty()
                }.each {
                    it.replaceNode {}
                }
            }
            from components.java
            def descriptor =
                    artifacts = ["build/libs/schwartz-monitor-${version}.jar", sourcesJar]

        }
    }
}

artifactory {
    contextUrl = 'http://repo.symentis.office/' //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        defaults {
            publications('mavenJava')
            publishArtifacts = true
            publishPom = true

        }
        repository {
            repoKey = 'grails-plugins-local'
        }
    }
}

